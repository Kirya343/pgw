//let currentConversationId = null; // –≥–ª–æ–±–∞–ª—å–Ω–æ
let currentSubscription = null;

// –ü—É—Ç—å –∫ WebSocket —Å–µ—Ä–≤–µ—Ä—É
const socket = new SockJS('/ws'); // –ü—É—Ç—å –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è WebSocket –≤ Spring

// –°–æ–∑–¥–∞–µ–º STOMP –∫–ª–∏–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–≤–µ—Ä—Ö SockJS
const stompClient = Stomp.over(socket);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
function connect() {
    stompClient.connect({}, function (frame) {
        console.log('Connected: ' + frame);

        initializeDialogClickListeners();

    });
}

function loadMessagesForConversation(conversationId) {
    fetch('/secure/messenger/' + conversationId)
        .then(response => {
            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π: ' + response.statusText);
            }
            return response.json();
        })
        .then(messages => {
            if (Array.isArray(messages)) {
                if (messages.length === 0) {
                    console.log('–°–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ –Ω–µ—Ç');
                }
                messages.forEach(message => {
                    showMessage(message);
                    // –í–∞—à –∫–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
                });
            } else {
                console.error('–û–∂–∏–¥–∞–ª—Å—è –º–∞—Å—Å–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ:', messages);
            }
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π:', error);
        });
}

document.querySelectorAll('.chat-item').forEach(item => {
    item.addEventListener('click', function () {
        const newConversationId = this.dataset.conversationId;

        if (newConversationId !== currentConversationId) {
            currentConversationId = newConversationId;

            // –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –æ—Ç —Å—Ç–∞—Ä–æ–≥–æ –∏ –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª
            if (currentSubscription) {
                currentSubscription.unsubscribe();
            }

            currentSubscription = stompClient.subscribe('/topic/messages.' + currentConversationId, function (messageOutput) {
                showMessage(JSON.parse(messageOutput.body));
            });

            // –¢—É—Ç –º–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            loadMessagesForConversation(currentConversationId);
        }
    });
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
function sendMessage() {
    const messageText = document.getElementById('message-input').value;
    if (!messageText.trim()) {
        console.error("Message text cannot be empty.");
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ ID —á–∞—Ç–∞
    if (!currentUserId || !currentConversationId) {
        console.error("User or conversation ID is missing.");
        return;
    }

    const message = {
        text: messageText,
        senderId: currentUserId,
        conversationId: currentConversationId
    };

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ STOMP
    stompClient.send("/app/chat.send", {}, JSON.stringify(message));

    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
    document.getElementById('message-input').value = '';
}


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
function showMessage(message) {
    console.log('Received message: ', message);

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    const messageContainer = document.getElementById("messages-container");
    const messageElement = document.createElement("div");
    messageElement.className = message.senderId === currentUserId ? 'message-out' : 'message-in'; // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
    messageElement.innerHTML = `
        <div class="message-content">
            <p>${message.text}</p>
            <span class="message-time">${new Date(message.sentAt).toLocaleTimeString()}</span>
        </div>
    `;
    messageContainer.appendChild(messageElement);

    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π –≤–Ω–∏–∑
    messageContainer.scrollTop = messageContainer.scrollHeight;
}

// –ü—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ STOMP (–ø–æ—Å–ª–µ stompClient.connect)
function initializeDialogClickListeners() {
    const dialogItems = document.querySelectorAll('.dialog-item');

    dialogItems.forEach(item => {
        item.addEventListener('click', function () {
            const selectedId = this.getAttribute('data-conversation-id');

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—ã–±—Ä–∞–Ω –Ω–æ–≤—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä
            if (currentConversationId !== selectedId) {
                currentConversationId = selectedId;

                // –°–Ω–∏–º–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ –≤—Å–µ—Ö, –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π
                dialogItems.forEach(d => d.classList.remove('active'));
                this.classList.add('active');

                // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                document.getElementById('messages-container').innerHTML = '';

                // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ STOMP
                if (stompClient.connected) {
                    // –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–π –ø–æ–¥–ø–∏—Å–∫–∏, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
                    if (currentSubscription) {
                        currentSubscription.unsubscribe();
                    }

                    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
                    currentSubscription = stompClient.subscribe('/topic/messages.' + currentConversationId, function (messageOutput) {
                        showMessage(JSON.parse(messageOutput.body)); // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    });
                }

                // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
                loadMessagesForConversation(currentConversationId);

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä, —á—Ç–æ –º—ã –ø—Ä–æ—á–∏—Ç–∞–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
                stompClient.send("/app/chat.markAsRead", {}, JSON.stringify({
                    conversationId: currentConversationId
                }));
            }
        });
    });

    // üîÅ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    if (dialogItems.length > 0) {
        dialogItems[0].click();
    }
}


// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
connect();

// –ü—Ä–∏–≤—è–∑–∫–∞ –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
document.getElementById('send-btn').addEventListener('click', sendMessage);
