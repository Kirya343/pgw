server:
  port: 8080

app:
  upload:
    dir: /home/WorkSwap/uploads
spring:
  config:
    import: optional:file:/app/oauth.yml
  web:
    resources:
      static-locations: classpath:/static/,classpath:/images/,file:./uploads/
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    cache: false # Для разработки
  datasource:
    url: jdbc:mysql://89.35.130.222:3306/s156_PGWSite?useSSL=false&serverTimezone=UTC
    username: u156_kOg0BtJwSj
    password: IY+BHWniVPjzVtreUER+@KwS
    driver-class-name: com.mysql.cj.jdbc.Driver
  mvc:
    static-path-pattern: /**
  hikari:
    connection-timeout: 30000
    maximum-pool-size: 10
    minimum-idle: 5
    idle-timeout: 600000
    max-lifetime: 1800000
    auto-commit: false
  jpa:
    properties:
      hibernate:
        connection:
          isolation: 2 # READ_COMMITTED
    hibernate:
      ddl-auto: update
      format_sql: true
    show-sql: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 877639477404-i3qsu3i9gbegu4fphjiagtu35ce3uc7f.apps.googleusercontent.com
            client-secret: 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
            scope:
              - openid
              - profile
              - email
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            #redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}" https://workswap.org/login/oauth2/code/google http://localhost:8080/login/oauth2/code/google
            authorization-grant-type: authorization_code
            client-name: Google
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
            jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs
            issuer-uri: https://accounts.google.com
  messages:
    basename: lang/messages
    encoding: UTF-8
    cache-duration: 0
logging:
  level:
    org:
      hibernate:
        SQL: DEBUG
      springframework:
        web:
          servlet:
            resource: DEBUG
        security: DEBUG
        security.oauth2: DEBUG
        security.oauth2.client: TRACE
        security.oauth2.client.web: TRACE
        security.oauth2.core: TRACE
        security.oauth2.jwt: DEBUG
        security.oauth2.resource: DEBUG
      kirya343:
        auth:
          services: DEBUG
        config: DEBUG